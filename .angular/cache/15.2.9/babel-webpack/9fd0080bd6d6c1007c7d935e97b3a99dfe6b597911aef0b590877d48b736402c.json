{"ast":null,"code":"import { QuizMakerConstants } from '../../constants/quiz-maker.constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/quiz.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"selected-option\": a0\n  };\n};\nfunction QuestionsComponent_ng_container_1_div_1_div_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_ng_container_1_div_1_div_4_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const answerIndex_r11 = restoredCtx.index;\n      const option_r10 = restoredCtx.$implicit;\n      const questionIndex_r6 = i0.ɵɵnextContext(2).index;\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.selectAnswer(questionIndex_r6, answerIndex_r11, option_r10));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r10 = ctx.$implicit;\n    const answerIndex_r11 = ctx.index;\n    const question_r5 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, (question_r5 == null ? null : question_r5.answeredIndex) === answerIndex_r11));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r10, \" \");\n  }\n}\nfunction QuestionsComponent_ng_container_1_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, QuestionsComponent_ng_container_1_div_1_div_4_button_1_Template, 2, 4, \"button\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r5 == null ? null : question_r5.incorrect_answers);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"correct-answer\": a0,\n    \"incorrect-answer\": a1\n  };\n};\nfunction QuestionsComponent_ng_container_1_div_1_div_5_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r18 = ctx.$implicit;\n    const question_r5 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c1, option_r18 == question_r5.correct_answer, option_r18 == question_r5.selectedAnswer));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r18, \"\");\n  }\n}\nfunction QuestionsComponent_ng_container_1_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, QuestionsComponent_ng_container_1_div_1_div_5_button_1_Template, 2, 5, \"button\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", question_r5 == null ? null : question_r5.incorrect_answers);\n  }\n}\nfunction QuestionsComponent_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(4, QuestionsComponent_ng_container_1_div_1_div_4_Template, 2, 1, \"div\", 7);\n    i0.ɵɵtemplate(5, QuestionsComponent_ng_container_1_div_1_div_5_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r5 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(question_r5.question);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r3.showResults);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.showResults);\n  }\n}\nfunction QuestionsComponent_ng_container_1_div_2_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function QuestionsComponent_ng_container_1_div_2_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r23.submitQuiz());\n    });\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction QuestionsComponent_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, QuestionsComponent_ng_container_1_div_2_button_1_Template, 2, 0, \"button\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.showSubmitButton);\n  }\n}\nfunction QuestionsComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, QuestionsComponent_ng_container_1_div_1_Template, 6, 3, \"div\", 3);\n    i0.ɵɵtemplate(2, QuestionsComponent_ng_container_1_div_2_Template, 2, 1, \"div\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.results);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.showResults);\n  }\n}\nfunction QuestionsComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n    i0.ɵɵtext(1, \" No Data Found. \");\n  }\n}\nexport class QuestionsComponent {\n  constructor(quizService, router) {\n    this.quizService = quizService;\n    this.router = router;\n    this.results = [];\n    this.noOfQuestions = QuizMakerConstants.AMOUNT;\n    this.showSubmitButton = false;\n    this.quizResult = [];\n    this.correctAnswerCount = 0;\n    this.color = '';\n    this.showResults = false;\n    this.totalQuestions = QuizMakerConstants.AMOUNT;\n  }\n  ngOnInit() {\n    this.showResults = this.quizService.getResults();\n  }\n  selectAnswer(questionIndex, answerIndex, selectedOption) {\n    if (this.results[questionIndex].answeredIndex !== answerIndex) {\n      this.results[questionIndex].answeredIndex = answerIndex;\n      this.results[questionIndex].selectedAnswer = selectedOption;\n    } else {\n      this.results[questionIndex].answeredIndex = -1;\n      this.results[questionIndex].selectedAnswer = '';\n    }\n    // to check length of results array\n    let checkAllAnswered = this.results.filter(ele => ele.selectedAnswer && ele.selectedAnswer !== '');\n    if (checkAllAnswered.length == this.noOfQuestions) {\n      this.showSubmitButton = true;\n    } else {\n      this.showSubmitButton = false;\n    }\n  }\n  submitQuiz() {\n    this.quizService.showResults(true);\n    this.quizService.saveQuizResult(this.results);\n    this.router.navigate(['/', 'quiz-result']);\n  }\n}\nQuestionsComponent.ɵfac = function QuestionsComponent_Factory(t) {\n  return new (t || QuestionsComponent)(i0.ɵɵdirectiveInject(i1.QuizService), i0.ɵɵdirectiveInject(i2.Router));\n};\nQuestionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionsComponent,\n  selectors: [[\"app-questions\"]],\n  inputs: {\n    results: \"results\"\n  },\n  decls: 4,\n  vars: 2,\n  consts: [[1, \"questionsResultPage\"], [4, \"ngIf\", \"ngIfElse\"], [\"noData\", \"\"], [\"class\", \"question-options\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"form-group text-center\", 4, \"ngIf\"], [1, \"question-options\"], [1, \"questions-list\"], [\"class\", \"option-list\", 4, \"ngIf\"], [1, \"option-list\"], [\"class\", \"btn option-button\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"option-button\", 3, \"ngClass\", \"click\"], [\"class\", \"btn option-button\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"option-button\", 3, \"ngClass\"], [1, \"form-group\", \"text-center\"], [\"class\", \"btn submit-btn\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"submit-btn\", 3, \"click\"], [1, \"text-center\"]],\n  template: function QuestionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, QuestionsComponent_ng_container_1_Template, 3, 2, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, QuestionsComponent_ng_template_2_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.results.length > 0)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf],\n  styles: [\".questionsResultPage[_ngcontent-%COMP%] {\\n  margin: auto;\\n  text-align: center;\\n  width: 65%;\\n  padding: 3% 2%;\\n}\\n\\n.question-options[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\n.questions-list[_ngcontent-%COMP%] {\\n  text-align: left;\\n  margin-bottom: 5px;\\n  font-size: 15px;\\n}\\n\\n.option-list[_ngcontent-%COMP%] {\\n  text-align: left;\\n}\\n\\n.option-button[_ngcontent-%COMP%] {\\n  background-color: transparent;\\n  color: green;\\n  border-color: green;\\n  margin-bottom: 8px;\\n  margin-right: 8px;\\n  padding: 3px 6px;\\n  font-size: 14px;\\n}\\n\\n.option-button[_ngcontent-%COMP%]:hover {\\n  background-color: green;\\n  color: #ffffff;\\n}\\n\\n.selected-option[_ngcontent-%COMP%] {\\n  background-color: #008000;\\n  color: #ffffff;\\n}\\n\\n.submit-btn[_ngcontent-%COMP%], .create-quiz-btn[_ngcontent-%COMP%] {\\n  background-color: #3a3e42;\\n  color: #ffffff;\\n  border-color: #3a3e42;\\n  width: 50%;\\n}\\n\\n.incorrect-answer[_ngcontent-%COMP%] {\\n  background-color: #ff0000;\\n  color: #ffffff;\\n  border-color: #ff0000;\\n}\\n\\n.incorrect-answer[_ngcontent-%COMP%]:hover {\\n  border-color: #ff0000;\\n}\\n\\n.correct-answer[_ngcontent-%COMP%] {\\n  background-color: #008000;\\n  color: white;\\n  border-color: #008000;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9xdWVzdGlvbnMvcXVlc3Rpb25zLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtFQUNBLGtCQUFBO0VBQ0EsVUFBQTtFQUNBLGNBQUE7QUFDSjs7QUFDQTtFQUNJLG1CQUFBO0FBRUo7O0FBQUE7RUFDSSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUdKOztBQURBO0VBQ0ksZ0JBQUE7QUFJSjs7QUFGQTtFQUNJLDZCQUFBO0VBQ0EsWUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtBQUtKOztBQUZBO0VBQ0ksdUJBQUE7RUFDQSxjQUFBO0FBS0o7O0FBSEE7RUFDSSx5QkFBQTtFQUNBLGNBQUE7QUFNSjs7QUFKQTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtFQUNBLHFCQUFBO0VBQ0EsVUFBQTtBQU9KOztBQUxBO0VBQ0kseUJBQUE7RUFDQSxjQUFBO0VBQ0EscUJBQUE7QUFRSjs7QUFOQTtFQUNJLHFCQUFBO0FBU0o7O0FBUEE7RUFDSSx5QkFBQTtFQUNBLFlBQUE7RUFDQSxxQkFBQTtBQVVKIiwic291cmNlc0NvbnRlbnQiOlsiLnF1ZXN0aW9uc1Jlc3VsdFBhZ2V7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB3aWR0aDogNjUlO1xyXG4gICAgcGFkZGluZzogMyUgMiU7XHJcbn1cclxuLnF1ZXN0aW9uLW9wdGlvbnN7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcbi5xdWVzdGlvbnMtbGlzdHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbn1cclxuLm9wdGlvbi1saXN0e1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG4ub3B0aW9uLWJ1dHRvbntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG4gICAgYm9yZGVyLWNvbG9yOiBncmVlbjtcclxuICAgIG1hcmdpbi1ib3R0b206IDhweDtcclxuICAgIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gICAgcGFkZGluZzogM3B4IDZweDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIFxyXG59XHJcbi5vcHRpb24tYnV0dG9uOmhvdmVye1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxufVxyXG4uc2VsZWN0ZWQtb3B0aW9ue1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwODAwMDtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG59XHJcbi5zdWJtaXQtYnRuLCAuY3JlYXRlLXF1aXotYnRue1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNhM2U0MjtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjM2EzZTQyO1xyXG4gICAgd2lkdGg6IDUwJTtcclxufVxyXG4uaW5jb3JyZWN0LWFuc3dlcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjAwMDA7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJvcmRlci1jb2xvcjogI2ZmMDAwMDtcclxufVxyXG4uaW5jb3JyZWN0LWFuc3dlcjpob3ZlcntcclxuICAgIGJvcmRlci1jb2xvcjogI2ZmMDAwMDtcclxufVxyXG4uY29ycmVjdC1hbnN3ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA4MDAwO1xyXG4gICAgY29sb3I6d2hpdGU7XHJcbiAgICBib3JkZXItY29sb3I6ICMwMDgwMDA7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,kBAAkB,QAAQ,qCAAqC;;;;;;;;;;;;;ICkCxDC,kCAG4E;IADxEA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA,OAASA,kFAAgD;IAAA,EAAC;IAE1DA,YACJ;IAAAA,iBAAS;;;;;;IAFLA,kIAAuE;IACvEA,eACJ;IADIA,2CACJ;;;;;IANJA,8BAA8C;IAC1CA,oGAKS;IACbA,iBAAM;;;;IALqBA,eAAgC;IAAhCA,oFAAgC;;;;;;;;;;;IAQvDA,kCAC2H;IACvHA,YAAU;IAAAA,iBAAS;;;;;IADnBA,wIAAsH;IACtHA,eAAU;IAAVA,0CAAU;;;;;IAHlBA,8BAA6C;IACzCA,qGAEuB;IAE3BA,iBAAM;;;;IAJyBA,eAA+B;IAA/BA,oFAA+B;;;;;IAflEA,8BAAyF;IAE1EA,YAAqB;IAAAA,iBAAQ;IAGxCA,wFAOM;IAENA,wFAKM;IACVA,iBAAM;;;;;IAlBSA,eAAqB;IAArBA,0CAAqB;IAG1BA,eAAkB;IAAlBA,0CAAkB;IASlBA,eAAiB;IAAjBA,yCAAiB;;;;;;IASvBA,kCAA+E;IAA9CA;MAAAA;MAAA;MAAA,OAASA,mCAAY;IAAA,EAAC;IAAwBA,sBAAM;IAAAA,iBAAS;;;;;IADlGA,+BAAyD;IACrDA,+FAA8F;IAClGA,iBAAM;;;;IADOA,eAAsB;IAAtBA,8CAAsB;;;;;IAxBvCA,6BAAuD;IACnDA,kFAoBM;IAENA,kFAEM;IACVA,0BAAe;;;;IAzBwCA,eAAW;IAAXA,wCAAW;IAsBxDA,eAAkB;IAAlBA,0CAAkB;;;;;IAMxBA,0BAAgC;IAACA,gCACrC;;;AD/CJ,OAAM,MAAOC,kBAAkB;EAU7BC,YAAoBC,WAAwB,EACxBC,MAAc;IADd,gBAAW,GAAXD,WAAW;IACX,WAAM,GAANC,MAAM;IAVjB,YAAO,GAAoB,EAAE;IACtC,kBAAa,GAAGL,kBAAkB,CAACM,MAAM;IACzC,qBAAgB,GAAa,KAAK;IAClC,eAAU,GAAoB,EAAE;IAChC,uBAAkB,GAAG,CAAC;IACtB,UAAK,GAAU,EAAE;IACjB,gBAAW,GAAa,KAAK;IAC7B,mBAAc,GAAGN,kBAAkB,CAACM,MAAM;EAGJ;EAEtCC,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI,CAACJ,WAAW,CAACK,UAAU,EAAE;EAClD;EAEAC,YAAY,CAACC,aAAqB,EAAEC,WAAmB,EAAGC,cAAsB;IAC9E,IAAG,IAAI,CAACC,OAAO,CAACH,aAAa,CAAC,CAACI,aAAa,KAAKH,WAAW,EAAC;MAC3D,IAAI,CAACE,OAAO,CAACH,aAAa,CAAC,CAACI,aAAa,GAAGH,WAAW;MACvD,IAAI,CAACE,OAAO,CAACH,aAAa,CAAC,CAACK,cAAc,GAAGH,cAAc;KAC5D,MACG;MACF,IAAI,CAACC,OAAO,CAACH,aAAa,CAAC,CAACI,aAAa,GAAG,CAAC,CAAC;MAC9C,IAAI,CAACD,OAAO,CAACH,aAAa,CAAC,CAACK,cAAc,GAAG,EAAE;;IAGjD;IACA,IAAIC,gBAAgB,GAAG,IAAI,CAACH,OAAO,CAACI,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACH,cAAc,IAAIG,GAAG,CAACH,cAAc,KAAK,EAAE,CAAC;IAElG,IAAIC,gBAAgB,CAACG,MAAM,IAAI,IAAI,CAACC,aAAa,EAAC;MAChD,IAAI,CAACC,gBAAgB,GAAG,IAAI;KAC7B,MACI;MACH,IAAI,CAACA,gBAAgB,GAAG,KAAK;;EAGjC;EAEAC,UAAU;IACR,IAAI,CAACnB,WAAW,CAACI,WAAW,CAAC,IAAI,CAAC;IAClC,IAAI,CAACJ,WAAW,CAACoB,cAAc,CAAC,IAAI,CAACV,OAAO,CAAC;IAC7C,IAAI,CAACT,MAAM,CAACoB,QAAQ,CAAC,CAAC,GAAG,EAAC,aAAa,CAAC,CAAC;EAC3C;;AA3CWvB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAwB;EAAAC;IAAAb;EAAA;EAAAc;EAAAC;EAAAC;EAAAC;IAAA;MCgB/B9B,8BAAiC;MAC7BA,qFA0Be;MAEfA,oHAEc;MAClBA,iBAAM;;;;MA/BaA,eAA0B;MAA1BA,6CAA0B","names":["QuizMakerConstants","i0","QuestionsComponent","constructor","quizService","router","AMOUNT","ngOnInit","showResults","getResults","selectAnswer","questionIndex","answerIndex","selectedOption","results","answeredIndex","selectedAnswer","checkAllAnswered","filter","ele","length","noOfQuestions","showSubmitButton","submitQuiz","saveQuizResult","navigate","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\angular-certification\\Mounika-test\\quiz-maker\\src\\app\\components\\questions\\questions.component.ts","D:\\angular-certification\\Mounika-test\\quiz-maker\\src\\app\\components\\questions\\questions.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { questionsList} from '../../models/questions';\r\nimport { decode } from 'html-entities';\r\nimport { QuizMakerConstants } from '../../constants/quiz-maker.constant';\r\nimport { QuizService } from '../../services/quiz.service';\r\nimport { Router } from '@angular/router'\r\n\r\n\r\n@Component({\r\n  selector: 'app-questions',\r\n  templateUrl: './questions.component.html',\r\n  styleUrls: ['./questions.component.scss']\r\n})\r\nexport class QuestionsComponent {\r\n  @Input() results: questionsList[] = [];\r\n  noOfQuestions = QuizMakerConstants.AMOUNT;\r\n  showSubmitButton : boolean = false;\r\n  quizResult: questionsList[] = [];\r\n  correctAnswerCount = 0;\r\n  color: string ='';\r\n  showResults : boolean = false;\r\n  totalQuestions = QuizMakerConstants.AMOUNT;\r\n  \r\n  constructor(private quizService: QuizService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(){\r\n    this.showResults = this.quizService.getResults();\r\n  }\r\n\r\n  selectAnswer(questionIndex: number, answerIndex: number,  selectedOption: string){\r\n    if(this.results[questionIndex].answeredIndex !== answerIndex){\r\n      this.results[questionIndex].answeredIndex = answerIndex;\r\n      this.results[questionIndex].selectedAnswer = selectedOption;\r\n    }\r\n    else{\r\n      this.results[questionIndex].answeredIndex = -1;\r\n      this.results[questionIndex].selectedAnswer = '';\r\n    }\r\n    \r\n    // to check length of results array\r\n    let checkAllAnswered = this.results.filter(ele => ele.selectedAnswer && ele.selectedAnswer !== '');\r\n\r\n    if (checkAllAnswered.length == this.noOfQuestions){\r\n      this.showSubmitButton = true;\r\n    }\r\n    else {\r\n      this.showSubmitButton = false;\r\n    }\r\n\r\n  }\r\n\r\n  submitQuiz(): void{\r\n    this.quizService.showResults(true);\r\n    this.quizService.saveQuizResult(this.results);\r\n    this.router.navigate(['/','quiz-result']);\r\n  }\r\n\r\n}\r\n","<!-- <div class=\"questionsResultPage\">\r\n    <ng-container *ngIf=\"results.length > 0; else noData;\">\r\n        <div class=\"question-options\" *ngFor=\"let question of results;let questionIndex = index\">\r\n            <div class=\"questions-list\">\r\n                <label>{{question.question}}</label>\r\n            </div>\r\n\r\n            <div class=\"option-list\">\r\n                <button class=\"btn option-button\"\r\n                    *ngFor=\"let option of question?.incorrect_answers; let answerIndex = index\"\r\n                    (click)=\"selectAnswer(questionIndex, answerIndex, option)\"\r\n                    [ngClass]=\"{'selected-option':question?.answeredIndex === answerIndex}\">\r\n                    {{option}}\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group text-center\">\r\n            <button *ngIf=\"showSubmitButton\" (click)=\"submitQuiz()\" class=\"btn submit-btn\">Submit</button>\r\n        </div>       \r\n\r\n    </ng-container>\r\n\r\n    <ng-template #noData>\r\n        <div class=\"text-center\"> </div> No Data Found.\r\n    </ng-template>\r\n</div> -->\r\n\r\n\r\n\r\n<div class=\"questionsResultPage\">\r\n    <ng-container *ngIf=\"results.length > 0; else noData;\">\r\n        <div class=\"question-options\" *ngFor=\"let question of results;let questionIndex = index\">\r\n            <div class=\"questions-list\">\r\n                <label>{{question.question}}</label>\r\n            </div>\r\n\r\n            <div *ngIf=\"!showResults\" class=\"option-list\">\r\n                <button class=\"btn option-button\"\r\n                    *ngFor=\"let option of question?.incorrect_answers; let answerIndex = index\"\r\n                    (click)=\"selectAnswer(questionIndex, answerIndex, option)\"\r\n                    [ngClass]=\"{'selected-option':question?.answeredIndex === answerIndex}\">\r\n                    {{option}}\r\n                </button>\r\n            </div>\r\n\r\n            <div *ngIf=\"showResults\" class=\"option-list\">\r\n                <button *ngFor=\"let option of question?.incorrect_answers;let i = index\" class=\"btn option-button\"\r\n                    [ngClass]=\"{'correct-answer':option == question.correct_answer, 'incorrect-answer':option == question.selectedAnswer}\">\r\n                    {{option}}</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"!showResults\" class=\"form-group text-center\">\r\n            <button *ngIf=\"showSubmitButton\" (click)=\"submitQuiz()\" class=\"btn submit-btn\">Submit</button>\r\n        </div>\r\n    </ng-container>\r\n\r\n    <ng-template #noData>\r\n        <div class=\"text-center\"> </div> No Data Found.\r\n    </ng-template>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}